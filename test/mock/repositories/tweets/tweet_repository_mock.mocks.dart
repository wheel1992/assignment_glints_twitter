// Mocks generated by Mockito 5.0.10 from annotations
// in assignment_glints_twitter/test/mock/repositories/tweets/tweet_repository_mock.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:assignment_glints_twitter/models/tweet/tweet.dart' as _i4;
import 'package:assignment_glints_twitter/repositories/tweets/tweet_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [TweetRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTweetRepository extends _i1.Mock implements _i2.TweetRepository {
  MockTweetRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i4.Tweet>> getAllTweets() =>
      (super.noSuchMethod(Invocation.method(#getAllTweets, []),
              returnValue: Stream<List<_i4.Tweet>>.empty())
          as _i3.Stream<List<_i4.Tweet>>);
  @override
  _i3.Future<bool> createTweet(
          {String? content, DateTime? createdAt, String? createdBy}) =>
      (super.noSuchMethod(
          Invocation.method(#createTweet, [], {
            #content: content,
            #createdAt: createdAt,
            #createdBy: createdBy
          }),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> updateTweet(
          {String? id,
          String? content,
          DateTime? createdAt,
          String? createdBy,
          DateTime? updatedAt}) =>
      (super.noSuchMethod(
          Invocation.method(#updateTweet, [], {
            #id: id,
            #content: content,
            #createdAt: createdAt,
            #createdBy: createdBy,
            #updatedAt: updatedAt
          }),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> deleteTweet({String? id}) =>
      (super.noSuchMethod(Invocation.method(#deleteTweet, [], {#id: id}),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
